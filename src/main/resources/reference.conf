db.welcomerFramework {
  uri="mongodb://127.0.0.1:27017"
  name="welcomerFramework"
  collections {
    picoContainer = "picos"
    picoPds = "picoPds"
    ecis = "ecis"
  }
}

#eventedGateway {
#}

eventedEntityResolver {
  timeout = 3000
  retries = 5
  eventTraceLogDepth = 15
}

externalEventGateway {
  bind {
    interface = "localhost"
    port = 8080
  }
}

link {
  mandrill.test-key = "TODO-SECURE"
  
  xero {
    test-consumerKey = "TODO-SECURE"
    test-consumerSecret = "TODO-SECURE"
    test-privateKey = "TODO-SECURE"
  }
}

# This contains keys that shouldn't be checked in
include "reference.secure.conf"

# Ref: http://spray.io/documentation/1.2.2/spray-can/configuration/
spray.can {
  server {
    server-header = "welcomerFramework/xx.yy"
    request-timeout = 5s
  }
  client {
    user-agent-header = "welcomerFramework/xx.yy"
  }
}

akka {
  extensions = ["me.welcomer.framework.extensions.ReflectionExtension"] //"kamon.metric.Metrics"

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
  
  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"
  
  actor {
    #provider = "akka.remote.RemoteActorRefProvider"
    
    debug {
      # enable function of Actor.loggable(), which is to log any received message at
      # DEBUG level, see the "Testing Actor Systems" section of the Akka Documentation
      # at http://akka.io/docs
      receive = off
 
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
      autoreceive = off
 
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off
 
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off
 
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off
      
      unhandled = on
    }
  }

#  remote {
#    netty.tcp {
#      hostname = "127.0.0.1"
#      #port = 0
#    }
#  }

}
